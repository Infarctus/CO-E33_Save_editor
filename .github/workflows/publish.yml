name: 'publish'

on:
  workflow_dispatch:
    inputs:
      job:
        description: 'Which job to run'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - fixed-runtime-only
          - regular-only
  release:
    types: [published]

jobs:
  publish-tauri:
    if: ${{ github.event.inputs.job == 'all' || github.event.inputs.job == 'regular-only' || github.event_name == 'release' }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: install frontend dependencies
        run: npm install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}

  publish-tauri-windows-fixed-runtime:
    if: ${{ github.event.inputs.job == 'all' || github.event.inputs.job == 'fixed-runtime-only' || github.event_name == 'release' }}
    permissions:
      contents: write
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Cache WebView2 Runtime
        id: cache-webview2
        uses: actions/cache@v4
        with:
          path: ./src-tauri/Microsoft.WebView2.FixedVersionRuntime.137.0.3296.52.x64
          key: webview2-runtime-137.0.3296.52-x64

      - name: Setup WebView2 Fixed Runtime and Modify Config
        shell: pwsh
        run: |
          $extractPath = "./src-tauri/"

          if ("${{ steps.cache-webview2.outputs.cache-hit }}" -ne "true") {
            Write-Host "Cache miss - downloading WebView2 Runtime..."
            
            $url = "https://msedge.sf.dl.delivery.mp.microsoft.com/filestreamingservice/files/0d5fcbfe-fa86-4697-8d1e-2067ab37b0a7/Microsoft.WebView2.FixedVersionRuntime.137.0.3296.52.x64.cab"
            $tempFile = "./WebView2Runtime.cab"
            
            Invoke-WebRequest -Uri $url -OutFile $tempFile
            New-Item -ItemType Directory -Force -Path $extractPath
            expand $tempFile $extractPath -F:*
            Remove-Item $tempFile
            Write-Host "Extracted WebView2 Runtime to $extractPath"
          } else {
            Write-Host "Cache hit - using cached WebView2 Runtime"
          }

          # Modify tauri config
          $configFile = './src-tauri/tauri.conf.json'
          $config = Get-Content -Raw -Path $configFile | ConvertFrom-Json
          $config.bundle.windows.webviewInstallMode = @{
            type = "fixedRuntime"
            path = "./Microsoft.WebView2.FixedVersionRuntime.137.0.3296.52.x64"
          }
          $config | ConvertTo-Json -Depth 10 | Set-Content -Path $configFile

      - name: install frontend dependencies
        run: npm install

      - uses: tauri-apps/tauri-action@v0
        id: tauri-action
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      

      - name: Publish Fixed Runtime Release
        uses: softprops/action-gh-release@v2
        with:
          name: tauri-windows-fixed-runtime
          tag_name: app-v${{ steps.tauri-action.outputs.appVersion }}
          append_body: true
          files : ./src-tauri/target/release/bundle/msi/*.msi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
